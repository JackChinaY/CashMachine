<Application x:Class="CashMachine.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CashMachine"
             StartupUri="Login_EN.xaml">
    <Application.Resources>
        <!-- Login Login_EN MainWindow_Local MainWindow_Local_EN MainWindow_Online_EN Window2 Factory_SerialPort dialogs_local_en/Good_Query-->
        <!--自定义颜色,颜色渐变画刷-->
        <LinearGradientBrush x:Key="LinearGradientBlueBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF377FED" Offset="0"/>
            <GradientStop Color="#FF074CC0" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="MyBtnBorderColor" Color="#FF2D78F4"></SolidColorBrush>
        <SolidColorBrush x:Key="MyBtnHoverBackgroundColor" Color="#FF317EF3"></SolidColorBrush>
        <!--END-->

        <!--按钮的样式-->
        <Style x:Key="MyWpfButton" TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="{StaticResource LinearGradientBlueBackground}"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource MyBtnBorderColor}"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--鼠标悬浮时按钮颜色-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MyBtnHoverBackgroundColor}"/>
                            </Trigger>
                            <!--鼠标按下时按钮颜色-->
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF2D63F4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--输入框的样式-->
        <ControlTemplate x:Key="FilletTextBox" TargetType="{x:Type TextBox}">
            <Border BorderBrush="#FF2D78F4" BorderThickness="1" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <!--密码框的样式-->
        <ControlTemplate x:Key="FilletPasswordBox" TargetType="{x:Type PasswordBox}">
            <Border BorderBrush="#FF2D78F4" BorderThickness="1" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <!--静态字体的样式-->
        <ControlTemplate x:Key="FilletTextBlock" TargetType="{x:Type TextBlock}">
            <Border BorderBrush="#FF2D78F4" BorderThickness="1" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <!--DataGrid 网格线颜色-->
        <Style x:Key="FilletDataGrid" TargetType="DataGrid">
            <!--网格线颜色 AutoGenerateColumns="True" CanUserAddRows="False" IsReadOnly="True" SelectionMode="Single"-->
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="AutoGenerateColumns" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
        </Style>

        <!--行样式触发 背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
        <Style x:Key="FilletDataGridRow" TargetType="DataGridRow">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <!--隔行换色-->
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FFF5F5F5"/>
                </Trigger>
                <!--设置鼠标移至行上方-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#4C3399FF"/>
                    <!--<Setter Property="FontWeight" Value="Bold"/>-->
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--此为内联式样式 放在 DataGrid中 -->
        <!--<DataGrid.RowStyle>
            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4C3399FF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DataGrid.RowStyle>-->

        <!--单元格样式触发-->
        <Style x:Key="FilletDataGridCell" TargetType="DataGridCell">
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <TextBlock TextAlignment="Center" VerticalAlignment="Center">
                           <ContentPresenter/>
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <!--<Setter Property="BorderBrush" Value="#FF2D63F4"/>-->
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
                <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>-->
            </Style.Triggers>
        </Style>
        
    </Application.Resources>
</Application>
